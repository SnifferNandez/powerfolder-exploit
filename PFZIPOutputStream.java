// from https://github.com/powerfolder/PF-CORE/blob/master/src/main/de/dal33t/powerfolder/util/PFZIPOutputStream.java

import java.io.IOException;
import java.io.OutputStream;
import java.util.zip.Deflater;
import java.util.zip.DeflaterOutputStream;

public class PFZIPOutputStream extends DeflaterOutputStream {

    private final static int GZIP_MAGIC = 0x8b1f;

    public PFZIPOutputStream(OutputStream out, int size) throws IOException {
        super(out, new Deflater(Deflater.DEFAULT_COMPRESSION, true), size);
        writeHeader();
    }

    @Override
    public void close() throws IOException {
        super.close();
        try {
            // Workaround for: PFS-1172: http://bugs.java.com/view_bug.do?bug_id=4797189
            if (def != null) {
                def.end();
            }
        } catch (Exception e) {
        }
    }

    public PFZIPOutputStream(OutputStream out) throws IOException {
        this(out, 512);
    }

    private final static byte[] header = {(byte) GZIP_MAGIC,
        (byte) (GZIP_MAGIC >> 8), Deflater.DEFLATED, 0, 0, 0, 0, 0, 0, 0};

    private synchronized void writeHeader() throws IOException {
        out.write(header);
    }
}
